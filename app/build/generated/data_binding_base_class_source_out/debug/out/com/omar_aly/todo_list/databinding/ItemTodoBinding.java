// Generated by data binding compiler. Do not edit!
package com.omar_aly.todo_list.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import com.omar_aly.todo_list.R;
import com.omar_aly.todo_list.model.Todo;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemTodoBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton checkTaskButton;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final MaterialCardView taskCard;

  @NonNull
  public final MaterialTextView taskDescriptionTextView;

  @NonNull
  public final MaterialTextView taskNameTextView;

  @NonNull
  public final View taskTagColor;

  @Bindable
  protected Todo mTodo;

  protected ItemTodoBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageButton checkTaskButton, FrameLayout container, MaterialCardView taskCard,
      MaterialTextView taskDescriptionTextView, MaterialTextView taskNameTextView,
      View taskTagColor) {
    super(_bindingComponent, _root, _localFieldCount);
    this.checkTaskButton = checkTaskButton;
    this.container = container;
    this.taskCard = taskCard;
    this.taskDescriptionTextView = taskDescriptionTextView;
    this.taskNameTextView = taskNameTextView;
    this.taskTagColor = taskTagColor;
  }

  public abstract void setTodo(@Nullable Todo todo);

  @Nullable
  public Todo getTodo() {
    return mTodo;
  }

  @NonNull
  public static ItemTodoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_todo, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemTodoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemTodoBinding>inflateInternal(inflater, R.layout.item_todo, root, attachToRoot, component);
  }

  @NonNull
  public static ItemTodoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_todo, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemTodoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemTodoBinding>inflateInternal(inflater, R.layout.item_todo, null, false, component);
  }

  public static ItemTodoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemTodoBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemTodoBinding)bind(component, view, R.layout.item_todo);
  }
}
